IMPL
----
1. Add tests from Serverless API that deal with cookies and CORS
   Ensure CORS OPTIONS tests, including access-control-request-headers

2. Test logging has all useful fields
   Ensure that custom headers are sent through correctly
   Do full logging for OAuth Agent requests, including performance breakdowns
   Think about how to represent this in configuration

END-TO-END
----------
1. Verify that full SPA works locally

LOCAL API
---------
1. Serverless API feature branch that no longer deals with cookies, CORS or CSRF
   Update tests to represent traffic from the token handler to the API
   They must only use access tokens, as for a mobile client, and 'npm run setup' will change
   Build a package and a custom packager may be needed to get the right config
   Do not deploy, since it will break the live system

2. Local token handler repo branch

3. New Express token handler repo

4. Cloud native updates

DEPLOYED ENVIRONMENT
--------------------
1. Update existing resources to use new certs, then delete old certs once working

2. Deploy and verify the new token handler
   Deal with a packager that selects a different config file
   
3. Elasticsearch logs - all OAuth Agent requests and only internal errors for OAuth Proxy

MISCELLANEOUS
-------------
1. Codacy support

2. ResponseWriter.objectResponse changes to Serverless API, to prevent cryptic 502 response errors
   Check for typeof object

3. DOC: My requirements are to route and also run a lambda, whereas AWS Proxy Integration does not support this
