STRATEGY
--------
1. This should be my only token handler repo, to avoid work conflicts
   Later: replace tokenhandlerapi to keep GitHub stars
   Can I avoid an Express OAuth Agent for Kubernetes?

LOCAL SPA
---------
1. Implement OAuth Agent work by porting from token handler API
   Get SPA end-to-end connectivity working
   Then get SPA fully working

2. Test consolidation
   Assert JSON result in test number 7
   Port better OPTIONS tests from token handler api
   Ensure that access-control-request-headers is handled correctly
   Ensure that custom headers are sent through correctly

LOCAL API
---------
1. Serverless API feature branch that no longer deal with cookies, CORS or CSRF
   Update tests to represent traffic from the token handler to the API
   They must only use access tokens, as for a mobile client, and 'npm run setup' will change
   Build a package and a custom packager may be needed to get the right config
   Do not deploy, since it will break the live system

2. Local token handler repo branch

3. New Express token handler repo

4. Cloud native updates on a branch

DEPLOYED ENVIRONMENT
--------------------
1. Request a new AWS cert that includes tokenhandler domain
   Then see if I can swap certs for existing resources
   
2. Elasticsearch logs - all OAuth Agent requests and only internal errors for OAuth Proxy

MISCELLANEOUS
-------------
1. Codacy support

2. ResponseWriter.objectResponse changes to Serverless API, to prevent cryptic 502 response errors

3. DOC: My requirements are to route and also run a lambda, whereas AWS Proxy Integration does not support this
